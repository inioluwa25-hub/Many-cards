AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Signup API requirements

Parameters:
  AppName:
    Type: String
  ServiceName:
    Type: String
  Stage:
    Type: String
  SignupApiGatewayRoleArn:
    Type: String
  SignupFunctionArn:
    Type: String
  ConfirmsignupFunctionArn:
    Type: String

Resources:
  SignupApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Name: !Sub "${AppName}-${Stage}-${ServiceName}-signup-api"
      TracingEnabled: true
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        openapi: 3.0.3
        info:
          version: 1.0.0
          title: !Sub "${AppName}-${Stage}-${ServiceName}-signup-api"
          description: Public signup API

        paths:
          /signup:
            post:
              x-amazon-apigateway-integration:
                credentials: !Ref SignupApiGatewayRoleArn
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SignupFunctionArn}/invocations"
              responses:
                '200':
                  description: Successful sign up
                  content:
                    application/json:
                      schema:
                        type: object
            options:
              responses:
                "200":
                  description: "CORS response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                type: "mock"
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                    responseTemplates:
                      application/json: "{}"

          /confirm-signup:
            post:
              x-amazon-apigateway-integration:
                credentials: !Ref SignupApiGatewayRoleArn
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConfirmsignupFunctionArn}/invocations"
              responses:
                '200':
                  description: Successful confirm sign up
                  content:
                    application/json:
                      schema:
                        type: object
            options:
              responses:
                "200":
                  description: "CORS response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                type: "mock"
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                    responseTemplates:
                      application/json: "{}"

  SignupApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SignupFunctionArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SignupApi}/${Stage}/*/*"

  ConfirmsignupApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ConfirmsignupFunctionArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SignupApi}/${Stage}/*/*"

Outputs:
  SignupApiUrl:
    Description: "Signup API endpoint URL"
    Value: !Sub "https://${SignupApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/signup"
  SignupApiId:
    Description: "Signup API ID"
    Value: !Ref SignupApi
  ConfirmsignupApiUrl:
    Description: "Confirm signup API endpoint URL"
    Value: !Sub "https://${SignupApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/confirm-signup"
  ConfirmsignupApiId:
    Description: "Confirm signup API ID"
    Value: !Ref SignupApi